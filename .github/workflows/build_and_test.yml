#!/usr/bin/env bash

# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build app with one workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:  
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
    
    # Contenedores de servicio para ejecutar con `container-job`
    services:
      # Etiqueta utilizada para acceder al contenedor de servicio
      redis:
        # Imagen de Docker Hub
        image: redis
        ports:
          - 9999:9999
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test   
    
    - name: Build application
      run: yarn build

    - name: Push the branch
      uses: satackey/push-prebuilt-action@v0.1
      with:
        push-branch: release-main
        docker-registry: docker.io
        docker-user: ${{ secrets.DOCKER_USER }}
        docker-token: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: actions-curl
      uses: enflo/curl-action@v1.2
      with:
        curl: http://localhost:9999/api/foo/12
  
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven and run automation testing
      run: mvn -B package --file auto_java/pom.xml -Dtest=TestFoo*
      
